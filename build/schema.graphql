type Merchant @entity {
  id: ID!
  proposalId: BigInt!
  ipfs: String!
  address: Bytes!
  listingFee: BigInt!
  platformFee: BigInt!
  ethWallet: String
  btcWallet: String
  bscWallet: String
}

type VoteInfo @entity {
  id: ID!
  proposalId: BigInt!
  voter: Bytes!
  balance: BigInt!
}

type Proposal @entity {
  id: ID!
  votes: BigInt!
  status: Boolean
}

type Token @entity {
  id: ID!
  hash: String!
  owner: Bytes!
}

type Transfers @entity {
  id: ID!
  from: Bytes!
  to: Bytes!
  tokenId: BigInt!
}

type Auction @entity {
  id: ID!
  tokenId: BigInt!
  starts: BigInt!
  listingPrice: BigInt!
  highestBid: BigInt
  highestBidder: Bytes
  amountPaid: BigInt
  ends: BigInt
  creator: Bytes
  paymentHash: String
  creationHash: Bytes
  settlementHash: Bytes
  isSettled: Boolean
  createdAt: BigInt!
  settledAt: BigInt
  highestBidAt: BigInt
}

type TopTime @entity {
  id: ID!
  tokenId: BigInt!
  starts: BigInt!
  listingPrice: BigInt!
  highestBid: BigInt
  highestBidder: Bytes
  toptime: BigInt
  creator: Bytes
  creationHash: Bytes
  settlementHash: Bytes
  isSettled: Boolean
  createdAt: BigInt!
  settledAt: BigInt
  highestBidAt: BigInt
}

type aBidInfo @entity {
  id: ID!
  bidder: Bytes
  auctionId: BigInt!
  tokenId: BigInt!
  currency: String!
  amount: BigInt!
  paid: BigInt
}

type tBidInfo @entity {
  id: ID!
  bidder: Bytes
  auctionId: BigInt!
  tokenId: BigInt!
  currency: String!
  amount: BigInt!
}
